# Generated by Django 2.2 on 2022-04-01 19:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phone_field.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('condominio', '0001_initial'),
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('experiencia', 'Experiencia'), ('trabalhando', 'Trabalhando'), ('afastado', 'Afastado'), ('aviso', 'Aviso'), ('demitido', 'Demitido')], default='experiencia', max_length=150)),
                ('img', models.ImageField(blank=True, upload_to='condominio/funcionario')),
                ('nome', models.CharField(help_text='Nome do Funcionário do Condominio', max_length=150)),
                ('sexo', models.CharField(choices=[('masculino', 'Masculino'), ('feminino', 'Feminino')], default='masculino', help_text='O Genero do Síndico ', max_length=150)),
                ('data_nascimento', models.CharField(blank=True, help_text='Data de Nacimento do Pestador de Serviço', max_length=150)),
                ('estado_civil', models.CharField(choices=[('solteiro', 'Solteiro'), ('solteira', 'Solteira'), ('casado', 'Casado'), ('casada', 'Casada'), ('viuvo', 'Viuvo'), ('viuva', 'viuva')], default='solteiro', help_text='O Estado Civil do Funcionário', max_length=150)),
                ('cpf', models.CharField(blank=True, help_text='Documento CPF do do Funcinário ', max_length=150)),
                ('rg', models.CharField(blank=True, help_text='Documento RG do Funcionário ', max_length=150, verbose_name='RG')),
                ('endereco', models.CharField(help_text='Endereço da residencia do Funcionário', max_length=150)),
                ('bairro', models.CharField(help_text='Bairro onde o Funcionário Reside', max_length=150)),
                ('cep', models.CharField(help_text='CEP do Endereço do Funcionário do Condominio', max_length=150)),
                ('cidade', models.CharField(help_text='cidade onde do Funcionário do Condominio Reside', max_length=150)),
                ('UF', models.CharField(help_text='Cdigo UF da localidade do Funcionário do Condominio', max_length=150)),
                ('telefone', phone_field.models.PhoneField(blank=True, help_text='Numero do telefone do funcionário', max_length=31)),
                ('celular', phone_field.models.PhoneField(blank=True, help_text='Numero do celular do funcionário do condominio', max_length=31)),
                ('email', models.EmailField(help_text='Email do funcionário', max_length=254)),
                ('endereço_do_trabalho', models.CharField(help_text='Endereço do local de trabalho', max_length=150)),
                ('telefone_do_servico', phone_field.models.PhoneField(blank=True, help_text='Numero do telefone do loca de trabalho', max_length=31)),
                ('funcao', models.CharField(choices=[('sindico', 'Sindico'), ('subsindico', 'Subsindico'), ('zelador', 'Zelador'), ('gerente predial', 'Gerente predial'), ('auxiliar de service gerais', 'Auxiliar de serviços gerais'), ('auxiliar administrativo', 'Auxiliar administrativo'), ('recepcionista', 'Recepcionista'), ('porteiro', 'Porteiro'), ('vigias', 'Vigias')], default='zelador', max_length=150)),
                ('horario_de_trabalho', models.CharField(help_text='O horário de trabalho', max_length=150)),
                ('admitido', models.DateTimeField(blank=True, help_text='data da Adimição do funcionario')),
                ('demitido', models.DateTimeField(blank=True, help_text='data da demição do funcionario', null=True)),
                ('salario_bruto', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Salário Bruto do Funcionário', max_digits=10)),
                ('vale_transporte', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Valor do Vale Transporte', max_digits=10)),
                ('vale_refeicao', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Valor do vale Refeição', max_digits=10)),
                ('salario_liquido', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Salário Líquido do Funcionário', max_digits=10)),
                ('emprego', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='condominio_emprego', to='condominio.Condominios')),
                ('sindico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='funcionarios', to='accounts.Administradores')),
            ],
            options={
                'verbose_name': 'funcionário',
                'verbose_name_plural': 'funcionários',
            },
        ),
        migrations.CreateModel(
            name='Vale_Transporte',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funcionario', models.CharField(help_text='Nome do funcionario', max_length=150)),
                ('mes_referente', models.DateTimeField(help_text='Mês de referência')),
                ('data_do_pagamento', models.DateTimeField(help_text='Data do pagamento')),
                ('descricao', models.TextField(help_text='descrição do local do pagamento')),
                ('valor', models.DecimalField(decimal_places=2, help_text='valor do vale Transporte', max_digits=10)),
                ('quantidade', models.DecimalField(decimal_places=2, help_text='quantidade de vales a ser pago', max_digits=10)),
                ('valor_total', models.DecimalField(decimal_places=2, help_text='valor total do vale Transporte a ser pago', max_digits=10)),
                ('sindico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vale_transporte', to='accounts.Administradores')),
            ],
        ),
        migrations.CreateModel(
            name='Vale_Alimentacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funcionario', models.CharField(help_text='Nome do funcionario', max_length=150)),
                ('mes_referente', models.DateTimeField(help_text='Mês de referência')),
                ('data_do_pagamento', models.DateTimeField(help_text='Data do pagamento')),
                ('descricao', models.TextField(help_text='descrição do local do pagamento')),
                ('valor', models.DecimalField(decimal_places=2, help_text='valor do vale alimentação', max_digits=10)),
                ('quantidade', models.DecimalField(decimal_places=2, help_text='quantidade de vales a ser pago', max_digits=10)),
                ('valor_total', models.DecimalField(decimal_places=2, help_text='valor total do vale alimentação a ser pago', max_digits=10)),
                ('sindico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vale_alimentacao', to='accounts.Administradores')),
            ],
        ),
        migrations.CreateModel(
            name='Salario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mes_referente', models.DateTimeField(help_text='Mês de referência')),
                ('banco', models.CharField(blank=True, help_text='Banco do funcionario tem conta', max_length=150)),
                ('agencia', models.CharField(blank=True, help_text='Agência da conta funcionário ', max_length=150)),
                ('conta', models.CharField(blank=True, help_text='Numero da conta', max_length=150)),
                ('tipo', models.CharField(choices=[('conta corrente', 'Conta Corrente'), ('poupança', 'Poupança')], default='conta corrente', help_text='A conta é corrente ou poupança', max_length=150)),
                ('salario_bruto', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Salário Bruto do Funcionário', max_digits=10)),
                ('vale_transporte', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Valor do Vale Transporte', max_digits=10)),
                ('vale_refeicao', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Valor do vale Refeição', max_digits=10)),
                ('inss', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='O Valor de o INSS', max_digits=10)),
                ('fgts', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='O Valor de Fundo de Garantia por Tempo de Serviço', max_digits=10)),
                ('salario_liquido', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Salário Líquido do Funcionário', max_digits=10)),
                ('funcionario', models.ForeignKey(help_text='Nome do Funcionário', on_delete=django.db.models.deletion.CASCADE, related_name='funcionario_holerite', to='colaboradores.Funcionario')),
                ('sindico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salario_funcionario', to='accounts.Administradores')),
            ],
            options={
                'verbose_name': 'Salário',
                'verbose_name_plural': 'Salários',
            },
        ),
        migrations.CreateModel(
            name='Ferias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funcionario', models.CharField(help_text='Nome do funcionario', max_length=150)),
                ('periodo', models.DateTimeField(help_text='Periodo')),
                ('data_do_pagamento', models.DateTimeField(help_text='Data do pagamento')),
                ('descricao', models.TextField(help_text='descrição do local do pagamento')),
                ('quantidade', models.DecimalField(decimal_places=2, help_text='quantidade de férias vencidas', max_digits=10)),
                ('valor_total', models.DecimalField(decimal_places=2, help_text='valor total do vale Transporte a ser pago', max_digits=10)),
                ('sindico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ferias', to='accounts.Administradores')),
            ],
        ),
        migrations.CreateModel(
            name='Decimo_Terceiro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funcionario', models.CharField(help_text='Nome do funcionario', max_length=150)),
                ('status', models.CharField(choices=[('primeira parcela', 'Primeira Parcela'), ('segunda Parcela', 'Segunda Parcela')], default='primeira parcela', max_length=150)),
                ('periodo', models.DateTimeField(help_text='Periodo')),
                ('data_do_pagamento', models.DateTimeField(help_text='Data do pagamento')),
                ('descricao', models.TextField(help_text='descrição do local do pagamento')),
                ('valor_total', models.DecimalField(decimal_places=2, help_text='valor total da parcela a ser pago', max_digits=10)),
                ('sindico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='decimo_terceiro', to='accounts.Administradores')),
            ],
        ),
        migrations.CreateModel(
            name='Avaliacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('rate', models.IntegerField()),
                ('funcionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='colaboradores.Funcionario')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_unidade_avaliacao', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
